# üéÆ GAMIFICATION & PROFILE SYSTEM ROADMAP

> **Vision**: Transform food discovery into an addictive treasure hunt with Pokemon-card-like rarity and achievement systems. 

The system must be able to be updated without pushing updates to app (i.e. via database updates, the importance of achievements, adding new ones and comparison for others should be able to be done via database)

---

## üèÜ CORE GAMIFICATION PRINCIPLES

### Dopamine-Driven Design
- **Immediate Rewards**: Instant visual feedback for discoveries
- **Variable Rewards**: Unpredictable rarity finds create excitement
- **Progressive Rewards**: Escalating achievements keep users engaged
- **Social Proof**: Shareable moments that create FOMO

### Rarity & Collection System
- **Common Items** (Grey): Frequently photographed items
- **Uncommon Items** (Silver): Moderately rare discoveries  
- **Rare Items** (Gold): Seldom-found items
- **Legendary Items** (Hologram): Ultra-rare, special items
- **Mythical Items** (Rainbow): One-of-a-kind discoveries

**However not sure how to rate them at the beginning with little data. So start with the normal view and give them the gold if it's the first time seen item.

---

## üìä PHASE 1: REAL STATISTICS SYSTEM (Week 1)

### Task 1.1: Create Statistics Calculation Hook
**Current Issue:** Profile shows hardcoded mock stats  
**Goal:** Calculate real user statistics from database

```javascript
// New hook: hooks/useUserStats.js
const useUserStats = (userId) => {
  // Calculate real stats from lists and items tables
  // - photosTaken: count of items with images
  // - listsCreated: count of lists
  // - avgRating: average rating across all items
  // - rarityScore: weighted score based on item rarities
  // - discoveriesThisWeek: recent discoveries
  // - firstFinds: how many new products have you rated that haven't been before
}
```

**Additional Feature Ideas:**
- [ ] **Discovery Streaks** - Days in a row with new items
- [ ] **Weekly Discovery Goals** - Gamified weekly targets
- [ ] **Rarity Score** - Overall user score based on rare finds
- [ ] **Explorer Level** - User level based on total discoveries and rarity
- [ ] **Monthly Stats Comparison** - "You discovered 40% more this month!"

### Task 1.2: Update ProfileView with Real Data
**Goal:** Replace mock data with real calculated statistics

**Additional Feature Ideas:**
- [ ] **Achievement Showcase** - Top 3 achievements prominently displayed
- [ ] **Progress Rings** - Circular progress indicators for goals
- [ ] **Sparkle Animations** - Subtle animations on stat updates
- [ ] **Comparison Badges** - "Top 10% of explorers this month"

### Task 1.3: Add Statistics Tracking to User Actions
**Goal:** Track statistics as users interact with app

**Additional Feature Ideas:**
- [ ] **Real-time Stat Updates** - Immediate visual feedback when stats change
- [ ] **Micro-celebrations** - Small celebrations for milestone numbers (10th item, etc.)

---

For future implementation, V1 only will highlight if the product has been photographed before

## üèÜ PHASE 2: ACHIEVEMENT SYSTEM FOUNDATION (Week 2-3)

### Task 2.1: Create Achievement Database Schema
**Goal:** Flexible, database-driven achievement system

```sql
CREATE TABLE achievements (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT,
  icon TEXT,
  rarity TEXT DEFAULT 'common', -- common, rare, legendary
  category TEXT, -- discovery, social, quality, streak
  criteria JSON, -- flexible criteria definition
  reward_points INTEGER DEFAULT 0,
  active BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE user_achievements (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id),
  achievement_id UUID REFERENCES achievements(id),
  earned_at TIMESTAMP DEFAULT NOW(),
  progress_data JSON, -- track progress details
  UNIQUE(user_id, achievement_id)
);
```

### Task 2.2: Design Initial Achievement Categories

#### üîç Discovery Achievements
- [ ] **First Bite** - Take your first food photo
- [ ] **Explorer** - Discover 10 items
- [ ] **Adventurer** - Discover 50 items  
- [ ] **Food Connoisseur** - Discover 100 items
- [ ] **Legendary Explorer** - Discover 500 items
- [ ] **Rare Hunter** - Find your first rare item
- [ ] **Treasure Seeker** - Find 5 rare items
- [ ] **Mythical Finder** - Discover a mythical item
- [ ] **First in the World** - Be the first to discover an item globally

#### üì± Social Achievements (Future)
- [ ] **Influencer** - Get 10 likes on a single item
- [ ] **Community Favorite** - Get 100 total likes
- [ ] **Helpful Reviewer** - Write 50 detailed notes
- [ ] **Trendsetter** - Have others discover items you shared
- [ ] **First comment**
- [ ] **First like**
- [ ] **Get 10 views**
- [ ] **Get 10 views**
- [ ] **First follower**
- [ ] **10 followers**

#### ‚≠ê Quality Achievements
- [ ] **Critic** - Rate 25 items
- [ ] **Detailed Reviewer** - Write notes for 10 items
- [ ] **Five Star Hunter** - Find 10 five-star items
- [ ] **Honest Reviewer** - Use all rating levels (1-5 stars)

#### üî• Streak Achievements
- [ ] **Daily Discoverer** - Discover items 3 days in a row
- [ ] **Weekly Explorer** - Discover items 7 days in a row
- [ ] **Monthly Maven** - Discover items 30 days in a row
- [ ] **Weekend Warrior** - Discover items every weekend for a month

**Additional Feature Ideas:**
- [ ] **Hidden Achievements** - Secret achievements that surprise users
- [ ] **Seasonal Achievements** - Time-limited holiday achievements
- [ ] **Location Achievements** - City-specific or country-specific achievements
- [ ] **Collaborative Achievements** - Achievements earned with friends
- [ ] **Meta Achievements** - Achievements for earning other achievements

### Task 2.3: Create Achievement Engine
**Goal:** System to automatically detect and award achievements

```javascript
// New hook: hooks/useAchievements.js
const useAchievements = (userId) => {
  // Check for newly earned achievements
  // Track progress toward achievements  
  // Award achievements and trigger celebrations
  // Handle achievement notifications
}
```

---

## üé® PHASE 3: CELEBRATION & NOTIFICATION SYSTEM (Week 3)

### Task 3.1: Create Achievement Notification Components
**Goal:** Dopamine-rich celebration system

#### Top Slide-Down Notifications
- [ ] **Achievement Unlocked**: Slide from top with achievement icon
- [ ] **Rarity Discovery**: "RARE ITEM DISCOVERED!" with sparkle effects
- [ ] **Streak Notifications**: "3 Day Streak!" with fire emoji
- [ ] **Level Up**: "You're now a Food Explorer!" with level badge

#### Modal Celebrations
- [ ] **First-Time Achievements**: Full-screen celebration for major milestones
- [ ] **Rare Discovery Modal**: Special modal for legendary/mythical items
- [ ] **Achievement Details**: Show what they earned and why it matters

**Additional Feature Ideas:**
- [ ] **Haptic Feedback** - Phone vibration patterns for different achievements
- [ ] **Confetti Animation** - Particle explosion for major achievements
- [ ] **Achievement Gallery** - Beautiful showcase of earned achievements
- [ ] **Share Achievement** - One-tap sharing of achievement unlocks

### Task 3.2: Implement Smart Notification Timing
**Goal:** Reward early users without being spammy

#### Notification Strategy:
- **First Week**: High frequency for onboarding and engagement
- **Week 2-4**: Medium frequency focusing on meaningful milestones
- **Month 2+**: Lower frequency for significant achievements only

#### Anti-Spam Features:
- [ ] **Notification Batching** - Group multiple achievements together
- [ ] **Priority System** - Only show most important achievements immediately
- [ ] **User Preferences** - Let users control notification frequency
- [ ] **Cool-down Periods** - Limit notifications per session/day

---

## üì§ PHASE 4: SHAREABILITY FEATURES (Week 4)

### Task 4.1: Achievement Sharing System
**Goal:** Make achievements highly shareable to drive viral growth

I think all of this isn't V1 material, the best would be when they share their profile, it should say what their "level" is if it's past a certain level. When people visit your profile, they can see the achievements

---

## üéÆ PHASE 5: ADVANCED GAMIFICATION (Future)

### üèÖ User Progression System
- [ ] **Explorer Levels** - Bronze ‚Üí Silver ‚Üí Gold ‚Üí Platinum ‚Üí Diamond
- [ ] **Specialization Paths** - Sweet Tooth, Spice Master, Healthy Hunter
- [ ] **Prestige System** - Reset progress for exclusive rewards
- [ ] **Seasonal Rankings** - Monthly leaderboards with rewards

### ü§ù Social Gamification  
- [ ] **Guild System** - Join food discovery groups
- [ ] **Team Challenges** - Collaborative discovery goals
- [ ] **Discovery Battles** - Friendly competition between users
- [ ] **Mentor System** - Experienced users guide newcomers

### üéÅ Reward Economy
- [ ] **Discovery Points** - Currency earned through achievements
- [ ] **Unlock System** - Use points to unlock special features
- [ ] **Premium Rewards** - Exclusive achievements for premium users
- [ ] **Real-World Rewards** - Partner with restaurants for discounts

### üîÆ AI-Powered Features
- [ ] **Smart Achievements** - AI suggests personalized achievements
- [ ] **Rarity Prediction** - AI predicts item rarity before photo
- [ ] **Discovery Recommendations** - "Try finding items like this one"
- [ ] **Trend Analysis** - "Ramen is trending in your area"

---

## üõ†Ô∏è TECHNICAL IMPLEMENTATION DETAILS

Need to fix all security RLS for DB.

### Database Schema Updates Needed
```sql
-- Enhanced items table for rarity system
ALTER TABLE items ADD COLUMN rarity_tier TEXT DEFAULT 'common';
ALTER TABLE items ADD COLUMN discovery_count INTEGER DEFAULT 0;
ALTER TABLE items ADD COLUMN rarity_effects JSON; -- Store visual effect data

-- Achievement system tables (from above)
-- Global discovery tracking tables
-- User progression tracking
```

### Performance Considerations
- [ ] **Caching Strategy** - Cache rarity calculations and achievement progress
- [ ] **Background Processing** - Process achievements async to avoid UI lag
- [ ] **Batch Updates** - Update discovery counts in batches
- [ ] **CDN Integration** - Fast delivery of achievement images/animations

### Analytics & Optimization
- [ ] **Achievement Analytics** - Track which achievements drive engagement
- [ ] **Rarity Analytics** - Monitor rarity distribution and balance
- [ ] **Sharing Analytics** - Measure viral coefficient of different features
- [ ] **A/B Testing** - Test different notification frequencies and styles

---

## üéØ SUCCESS METRICS

### Engagement Metrics
- **Achievement Unlock Rate** - % of users earning achievements
- **Notification Click-Through Rate** - % engaging with achievement notifications
- **Rare Discovery Rate** - Frequency of rare item discoveries
- **Sharing Rate** - % of achievements shared externally

### Retention Metrics  
- **7-Day Retention** - Impact of gamification on user retention
- **Session Duration** - Time spent in app after achievements
- **Return Rate** - Users returning after achievement notifications
- **Streak Completion** - % of users completing discovery streaks

### Viral Metrics
- **Share Rate** - Achievement shares per user per week
- **Referral Rate** - New users from achievement shares
- **Social Engagement** - Likes/comments on shared achievements
- **Deep Link Clicks** - Traffic from shared achievement links

---

## üöÄ IMMEDIATE NEXT STEPS

### Week 1: Foundation
1. **Create useUserStats hook** with real statistics calculation
2. **Update ProfileView** to use real data instead of mock stats

### Week 2: Rarity System
1. **Implement rarity detection** algorithm based on discovery frequency  
2. **Create rarity visual effects** in AddItemModal (borders, particles, etc.)
3. **Add achievement database schema** and initial achievement definitions

### Week 3: Celebrations
1. **Build achievement notification system** with top slide-down alerts
2. **Create celebration components** for rare discoveries and achievements
3. **Implement smart notification timing** to avoid spam

### Week 4: Sharing
1. **Build achievement sharing templates** for social platforms
2. **Add viral discovery features** with global first discoveries
3. **Test and optimize** notification frequency and achievement balance

---

*This gamification system is designed to be addictive, shareable, and scalable. The rarity system creates Pokemon-card-like excitement, while the achievement system provides continuous dopamine hits that keep users engaged and coming back for more discoveries.*
