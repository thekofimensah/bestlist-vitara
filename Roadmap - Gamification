# 🎮 GAMIFICATION & PROFILE SYSTEM ROADMAP

> **Vision**: Transform food discovery into an addictive treasure hunt with Pokemon-card-like rarity and achievement systems. 

The system must be able to be updated without pushing updates to app (i.e. via database updates, the importance of achievements, adding new ones and comparison for others should be able to be done via database)

---

## 🏆 CORE GAMIFICATION PRINCIPLES

### Dopamine-Driven Design
- **Immediate Rewards**: Instant visual feedback for discoveries
- **Variable Rewards**: Unpredictable rarity finds create excitement
- **Progressive Rewards**: Escalating achievements keep users engaged
- **Social Proof**: Shareable moments that create FOMO



**However not sure how to rate them at the beginning with little data. So start with the normal view and give them the gold if it's the first time seen item.

---

## 📊 PHASE 1: REAL STATISTICS SYSTEM (Week 1)

### Task 1.1: Create Statistics Calculation Hook
**Current Issue:** Profile shows hardcoded mock stats  
**Goal:** Calculate real user statistics from database

```javascript
// New hook: hooks/useUserStats.js
const useUserStats = (userId) => {
  // Calculate real stats from lists and items tables
  // - photosTaken: count of items with images
  // - listsCreated: count of lists
  // - avgRating: average rating across all items
  // - discoveriesThisWeek: recent discoveries
  // - firstFinds: how many new products have you rated that haven't been before
}
```

### Task 1.2: Update ProfileView with Real Data
**Goal:** Replace mock data with real calculated statistics

### Task 1.3: Add Statistics Tracking to User Actions
**Goal:** Track statistics as users interact with app

**Additional Feature Ideas:**
- [ ] **Real-time Stat Updates** - Immediate visual feedback when stats change
- [ ] **Micro-celebrations** - Small celebrations for milestone numbers (10th item, etc.)

---

For future implementation, V1 only will highlight if the product has been photographed before

## 🏆 PHASE 2: ACHIEVEMENT SYSTEM FOUNDATION (Week 2-3)

### Task 2.1: Create Achievement Database Schema
**Goal:** Flexible, database-driven achievement system

```sql
CREATE TABLE achievements (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT,
  icon TEXT,
  rarity TEXT DEFAULT 'common', -- common, rare, legendary
  category TEXT, -- discovery, social, quality, streak
  criteria JSON, -- flexible criteria definition
  reward_points INTEGER DEFAULT 0,
  active BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE user_achievements (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id),
  achievement_id UUID REFERENCES achievements(id),
  earned_at TIMESTAMP DEFAULT NOW(),
  progress_data JSON, -- track progress details
  UNIQUE(user_id, achievement_id)
);
```

### Task 2.2: Design Initial Achievement Categories

#### 🔍 Discovery Achievements
- [ ] **First Bite** - Take your first food photo
- [ ] **Explorer** - Discover 10 items
- [ ] **Adventurer** - Discover 50 items  
- [ ] **Food Connoisseur** - Discover 100 items
- [ ] **Legendary Explorer** - Discover 500 items
- [ ] **First in the World** - Be the first to discover an item globally

#### 📱 Social Achievements (Future)
- [ ] **Influencer** - Get 10 likes on a single item
- [ ] **Community Favorite** - Get 100 total likes
- [ ] **Helpful Reviewer** - Write 50 detailed notes
- [ ] **Trendsetter** - Have others discover items you shared
- [ ] **First comment**
- [ ] **First like**
- [ ] **Get 10 views**
- [ ] **First follower**
- [ ] **10 followers**
- [] Someone shared an item you saved

#### ⭐ Quality Achievements
- [ ] **Detailed Reviewer** - Write notes for 10 items
- [ ] **Five Star Hunter** - Find 10 five-star items
- [ ] **Honest Reviewer** - Use all rating levels (1-5 stars)

#### 🔥 Streak Achievements
- [ ] **Daily Discoverer** - Discover items 3 days in a row
- [ ] **Weekly Explorer** - Discover items 7 days in a row
- [ ] **Monthly Maven** - Discover items 30 days in a row
- [ ] **Weekend Warrior** - Discover items every weekend for a month


### Task 2.3: Create Achievement Engine
**Goal:** System to automatically detect and award achievements

```javascript
// New hook: hooks/useAchievements.js
const useAchievements = (userId) => {
  // Check for newly earned achievements
  // Track progress toward achievements  
  // Award achievements and trigger celebrations
  // Handle achievement notifications
}
```

---

## 🎨 PHASE 3: CELEBRATION & NOTIFICATION SYSTEM (Week 3)

### Task 3.1: Create Achievement Notification Components
**Goal:** Dopamine-rich celebration system

#### Top Slide-Down Notifications
- [ ] **Achievement Unlocked**: Slide from top with achievement icon
- [ ] **Rarity Discovery**: "FIRST ITEM DISCOVERED!" with sparkle effects
- [ ] **Streak Notifications**: "3 Day Streak!" with fire emoji
- [ ] **Level Up**: "You're now a Food Explorer!" with level badge

#### Modal Celebrations
- [ ] **First-Time Achievements**: Full-screen celebration for major milestones
- [ ] **Rare Discovery Modal**: Special modal effect on additemmodal for first finds

**Additional Feature Ideas:**
- [ ] **Haptic Feedback** - Phone vibration patterns for different achievements
- [ ] **Confetti Animation** - Particle explosion for major achievements
- [ ] **Achievement Gallery** - Beautiful showcase of earned achievements
- [ ] **Share Achievement** - One-tap sharing of achievement unlocks

### Task 3.2: Implement Smart Notification Timing
**Goal:** Reward early users without being spammy


#### Anti-Spam Features:
- [ ] **Notification Batching** - Group multiple achievements together
- [ ] **Priority System** - Only show most important achievements immediately
- [ ] **User Preferences** - Let users control notification frequency
- [ ] **Cool-down Periods** - Limit notifications per session/day

---


I think all of this isn't V1 material, the best would be when they share their profile, it should say what their "level" is if it's past a certain level. When people visit your profile, they can see the achievements

---
